name: TSV to TTL Conversion and SHACL Validation

on:
  push:
    branches: [main]
    paths:
      - 'Submissions/**/*.tsv'

jobs:
  process-tsv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Python and Install pySHACL
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - run: pip install --upgrade git+https://github.com/RDFLib/pySHACL.git

      - name: Download ROBOT Tool
        run: |
          curl -L -o robot.jar "https://github.com/ontodev/robot/releases/latest/download/robot.jar"

      - name: Detect Changed TSV File
        id: findtsv
        run: |
          echo "üîç Detecting latest .tsv file changed in commit..."
          CHANGED=$(git log -1 --name-only --pretty=format: | grep 'Submissions/.*/[0-9]\+\.tsv' | tail -n 1 || echo "")
          if [[ -z "$CHANGED" ]]; then
            echo "‚ö†Ô∏è No .tsv file found in latest commit."
            echo "tsv_file=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "‚úÖ Detected TSV file: $CHANGED"
          echo "tsv_file=$CHANGED" >> "$GITHUB_OUTPUT"

      - name: Run ROBOT to generate TTL and save log
        if: steps.findtsv.outputs.tsv_file != ''
        run: |
          TSV_FILE="${{ steps.findtsv.outputs.tsv_file }}"
          BASENAME=$(basename "$TSV_FILE" .tsv)
          DIRNAME=$(dirname "$TSV_FILE")
          TTL_FILE="${DIRNAME}/${BASENAME}.ttl"
          LOG_FILE="${DIRNAME}/${BASENAME}.txt"

          echo "üì¶ Running ROBOT for $TSV_FILE -> $TTL_FILE"
          java -Xmx4G -jar robot.jar merge \
            -i ontology/mwo-full.owl \
            -i data/components/req_1.owl \
            -i data/components/req_2.owl \
            --prefix "nfdicore: https://nfdi.fiz-karlsruhe.de/ontology/" \
            template --template "$TSV_FILE" \
            -o "$TTL_FILE" -vvv \
            2>&1 | tee "$LOG_FILE"

          echo "TTL_FILE=$TTL_FILE" >> $GITHUB_ENV
          echo "LOG_FILE=$LOG_FILE" >> $GITHUB_ENV

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add "$TTL_FILE" || echo "‚ö†Ô∏è TTL not found"
          git add "$LOG_FILE" || echo "‚ö†Ô∏è Log not found"
          
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "Add TTL and log for ${{ steps.findtsv.outputs.tsv_file }}"
            git push
          fi

      - name: Run SHACL Validation
        if: env.TTL_FILE != ''
        shell: bash
        run: |
          set +e  # <--- disable immediate exit on error
          result_file="${TTL_FILE%.ttl}.md"
          log_file="${TTL_FILE%.ttl}.log"
          shape_file="Submissions/shapes/$(basename $(dirname "$TTL_FILE")).ttl"

          echo "üîç Validating: $TTL_FILE"
          echo "üìÑ Shape File: $shape_file"
          echo "‚ö†Ô∏è Log File: $log_file"

          {
            echo "üöÄ Validation Start: $(date)"
            python -m pyshacl -s "$shape_file" -df auto -sf turtle -f human "$TTL_FILE" > "$result_file"
            echo "üîö Validation End: $(date)"
          } &> "$log_file" || echo "‚ö†Ô∏è pySHACL returned non-zero status (likely validation error)"

          echo "result_file=$result_file" >> $GITHUB_ENV
          echo "log_file=$log_file" >> $GITHUB_ENV

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add "$result_file" || echo "‚ö†Ô∏è Could not add result file"
          git add "$log_file" || echo "‚ö†Ô∏è Could not add log file"

          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "Add validation and log for ${{ env.TTL_FILE }}"
            git push
          fi

          # Prevent failure due to exit code 1
          exit 0

