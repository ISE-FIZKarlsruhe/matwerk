name: Validate RDF Submissions

on:
  push:
    paths:
      - 'Submissions/**/*.ttl'
    branches:
      - main

jobs:
  validate-shacl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pySHACL
        run: pip install --upgrade git+https://github.com/RDFLib/pySHACL.git

      - name: Detect changed TTL file from commit message
        id: findfile
        run: |
          CHANGED=$(git log -1 --pretty=%B | grep -o 'Submissions/.*/graph_.*\.ttl' || echo "")
          echo "Changed file: $CHANGED"
          echo "changed_file=$CHANGED" >> $GITHUB_OUTPUT

      - name: Run SHACL validation
        if: steps.findfile.outputs.changed_file != ''
        run: |
          changed_file="${{ steps.findfile.outputs.changed_file }}"
          
          if [ ! -f "$changed_file" ]; then
            echo "🚫 File was deleted: $changed_file — skipping validation."
            exit 0
          fi
      
          shape_path="Submissions/shapes/$(basename $(dirname "$changed_file")).ttl"
          tmp_trig_file="${changed_file%.ttl}.trig"
          result_file="${changed_file/graph_/validation_}"
          result_file="${result_file%.ttl}.md"
      
          echo "Converting $changed_file to $tmp_trig_file for SHACL validation..."
          cp "$changed_file" "$tmp_trig_file"
      
          echo "Running SHACL validation..."
          python -m pyshacl -s "$shape_path" -df auto -sf turtle -f human "$tmp_trig_file" > "$result_file"
      
          echo "result_file=$result_file" >> $GITHUB_ENV


      - name: Show Git status (debug)
        run: |
          git status
          ls -lh Submissions/*/

      - name: Commit and push validation result
        if: env.result_file != ''
        run: |
          echo "🔁 Committing ${{ env.result_file }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "${{ env.result_file }}"
          git commit -m "Add/update validation result: ${filename}"
          git push
