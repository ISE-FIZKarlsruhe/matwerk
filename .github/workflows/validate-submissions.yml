name: TSV to TTL Conversion and SHACL Validation

on:
  push:
    branches: [main]
    paths:
      - 'Submissions/**/*.tsv'

jobs:
  process-tsv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Robot Tool
        run: |
          curl -L -o robot.jar "https://github.com/ontodev/robot/releases/latest/download/robot.jar"

      - name: Set up Python and Install pySHACL
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - run: pip install --upgrade git+https://github.com/RDFLib/pySHACL.git

      - name: Detect Changed TSV File
        id: findtsv
        run: |
          echo "🔍 Detecting all .tsv files changed in the last commit..."
      
          CHANGED=$(git log -1 --name-only --pretty=format: | grep 'Submissions/.*/[0-9]\+\.tsv' || echo "")
      
          if [[ -z "$CHANGED" ]]; then
            echo "⚠️ No .tsv files found in commit."
            echo "tsv_files=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
      
          echo "📁 TSV files detected:"
          echo "$CHANGED"
      
          TSV_LIST=$(echo "$CHANGED" | tr '\n' ',' | sed 's/,$//')
          echo "tsv_files=$TSV_LIST" >> "$GITHUB_OUTPUT"

      - name: Set TTL file as output
        id: extract
        run: |
          TTL_FILE="Submissions/Person/$(basename ${{ steps.findfiles.outputs.tsv_files }} .tsv).ttl"
          echo "ttl_file=$TTL_FILE" >> $GITHUB_OUTPUT
          echo "ttl_file=$TTL_FILE" >> $GITHUB_ENV
      - name: Run SHACL Validation
        if: steps.extract.outputs.ttl_file != ''
        run: |
          ttl_file="${{ steps.extract.outputs.ttl_file }}"
          result_file="${ttl_file%.ttl}.md"
          shape_file="Submissions/shapes/$(basename $(dirname "$ttl_file")).ttl"
      
          python -m pyshacl -s "$shape_file" -df auto -sf turtle -f human "$ttl_file" > "$result_file"
      
          echo "result_file=$result_file" >> $GITHUB_ENV
          echo "result_file=$result_file" >> $GITHUB_OUTPUT
      - name: Commit and Push TTL and Validation Result
        if: steps.extract.outputs.ttl_file != '' && steps.extract.outputs.result_file != ''
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "${{ steps.extract.outputs.ttl_file }}"
          git add "${{ steps.extract.outputs.result_file }}"
      
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Add TTL and validation for ${{ steps.extract.outputs.ttl_file }}"
            git push
          fi

