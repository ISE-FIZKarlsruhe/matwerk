name: validation

on:
  push:
    branches:
    - main
    paths-ignore:
      - 'Submissions/**'
      - '.github/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
        path: main 
    - name: Validate entire knowledge graph data with SHACL shapes and with SPARQL queries
      run: |
           # retrieve complete KG
           curl -v https://nfdi.fiz-karlsruhe.de/matwerk/sparql --data query='CONSTRUCT {%0A%20 %3Fs %3Fp %3Fo .%0A}%0AWHERE {%0A%20 %3Fs %3Fp %3Fo .%0A}%0A' -H "accept: text/turtle"  > matwerk.ttl

           ########################################################
           # we need to retrieve robot.jar
           curl -L -o robot.jar "https://github.com/ontodev/robot/releases/latest/download/robot.jar"
           #java -jar robot.jar --version

           # reasoning to materialize sublclasses, subproperties, inverse prperties, etc.
           #java -Xmx16G -jar robot.jar -vvv reason --reasoner hermit --axiom-generators "SubClass SubDataProperty ClassAssertion EquivalentObjectProperty PropertyAssertion InverseObjectProperties SubObjectProperty" --include-indirect true --input matwerk.ttl --output reasoned.ttl 
           #java -Xmx16G -jar robot.jar -vvv reason --reasoner hermit --axiom-generators "SubClass ClassAssertion PropertyAssertion InverseObjectProperties" --include-indirect true --input matwerk.ttl --output reasoned.ttl 
           #java -Xmx16G -jar robot.jar -vvv reason --reasoner hermit --axiom-generators "InverseObjectProperties" --include-indirect true --input matwerk.ttl --output reasoned.ttl 
           #java -Xmx16G -jar robot.jar -vvv reason --reasoner hermit --axiom-generators "PropertyAssertion" --include-indirect true --input matwerk.ttl --output reasoned.ttl 
           cp matwerk.ttl reasoned.ttl

           ########################################################
           # for SHACL based validation we need to install pyshacl
           pip install pyshacl

           # every ontology release version is subject of ontology version number/IRI. 
           python3 -m pyshacl  -s main/shapes/shape7.ttl reasoned.ttl

           # an ontology version should be always contiuant part of ontology
           python3 -m pyshacl  -s main/shapes/shape6.ttl reasoned.ttl

           # an ontology variant should be always contiuant part of ontology
           python3 -m pyshacl  -s main/shapes/shape5.ttl reasoned.ttl
           
           # no roles without realizations
           python3 -m pyshacl  -s main/shapes/shape4.ttl reasoned.ttl

           # no roles without bearers
           python3 -m pyshacl  -s main/shapes/shape3.ttl reasoned.ttl
          
           # no punning
           python3 -m pyshacl  -s main/shapes/shape2.ttl reasoned.ttl

           # no orphaned textual entities
           #python3 -m pyshacl  -s main/shapes/shape1.ttl reasoned.ttl


           #######################################################
           # SPARQL based verification
           
           # OCRID must be IRI, not literal
           java -jar robot.jar verify --input reasoned.ttl --queries main/shapes/verify1.sparql

