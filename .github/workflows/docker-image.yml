name: Docker Image CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'Submissions/**'
      - '.github/**'
#   schedule:
#     - cron: '0 2 * * *'   # daily at 02:00 UTC
#   workflow_dispatch:

# permissions:
#   contents: write   # for git push
#   packages: write   # for ghcr.io login/push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> "$GITHUB_ENV"
          echo "Using image: ghcr.io/${GITHUB_REPOSITORY,,}"

      - name: Build and Push image
        env:
          REGISTRY: ghcr.io
        run: |
          set -euxo pipefail
          docker build -t $REGISTRY/${REPO}:latest -t $REGISTRY/${REPO}:$(date +%s) .
          docker push $REGISTRY/${REPO} --all-tags

      - name: Extract generated data dir from image
        env:
          REGISTRY: ghcr.io
        run: |
          set -euxo pipefail
          cid=$(docker create $REGISTRY/${REPO}:latest)
          rm -rf data
          mkdir -p data
          # copy the *contents* of /data into ./data
          docker cp "$cid":/data/. ./data/ || echo "⚠️ /data not found in image"
          docker rm "$cid"

      - name: Commit & push data/ (rebased)
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage everything in data/, including new/deleted files
          git add -A data

          git commit -m "[skip ci] Update generated data directory"

          # Rebase our commit on top of the latest remote to avoid non-fast-forward errors
          git pull --rebase origin "${BRANCH}"

          # Push, retry a couple times in case another run races us
          for i in 1 2 3; do
            if git push; then
              exit 0
            fi
            echo "Push race detected, retrying ($i/3)…"
            git pull --rebase origin "${BRANCH}"
            sleep $((RANDOM%5+1))
          done

          echo "Push failed after retries." >&2
          exit 1

      - name: Trigger private repo workflow
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            https://api.github.com/repos/ISE-FIZKarlsruhe/deploy/dispatches \
            -d '{"event_type":"run-private-workflow"}'
